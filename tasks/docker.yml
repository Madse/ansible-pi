- name: Install initial packages
  become: true
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
    pkg:
      - ca-certificates
      - curl
      - gnupg

#- name: Install docker repo key to apt
#  become: true
#  ansible.builtin.apt_key:
#    url: https://download.docker.com/linux/ubuntu/gpg

- name: prepare codename variable
  block:
    - ansible.builtin.shell: lsb_release -sc
      register: os_codename
    - set_fact:
        os_distribution_codename: "{{ os_codename.stdout }}"
      when: os_distribution_codename is not defined

- name: prepare distribution id variable
  block:
    - ansible.builtin.shell: lsb_release -si
      register: os_id
    - set_fact:
        os_distribution_id: "{{ os_id.stdout }}"
      when: os_distribution_id is not defined

- set_fact:
    docker_keyring_filename: "docker-keyring-{{ os_distribution_id | lower }}.asc"
    docker_keyring_path: "/etc/apt/keyrings"

# # Add Docker's official GPG key:
# sudo apt-get update
# sudo apt-get install ca-certificates curl
# sudo install -m 0755 -d /etc/apt/keyrings
# sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
# sudo chmod a+r /etc/apt/keyrings/docker.asc

- name: Install docker repo key to apt
  become: true
  ansible.builtin.shell: |
    install -m 0755 -d {{ docker_keyring_path }}
    curl -fsSL "https://download.docker.com/linux/{{ os_distribution_id | lower }}/gpg" -o {{ docker_keyring_path }}/{{ docker_keyring_filename }}
    chmod a+r {{ docker_keyring_path }}/{{ docker_keyring_filename }}

## Add the repository to Apt sources:
# echo \
#   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
#   $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
#   sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
# sudo apt-get update

- name: Install docker repository to apt
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=arm64 signed-by={{ docker_keyring_path }}/{{ docker_keyring_filename }}] https://download.docker.com/linux/{{ os_distribution_id | lower }} {{ os_distribution_codename }} {{ docker_setup.repo_stage }}"
    state: present

- name: Install docker packages
  become: true
  ansible.builtin.apt:
    update_cache: true
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
  register: install_docker_result

- name: Reboot the machine to make the docker.service start # see: https://bbs.archlinux.org/viewtopic.php?id=267694
  become: true
  reboot:
  when: install_docker_result.changed is true

- name: Enable docker.service
  become: true
  ansible.builtin.service:
    name: docker
    state: restarted
    enabled: true

- name: Create "docker" group
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: Add user to "docker" group
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Add usefull alias for docker
  ansible.builtin.blockinfile:
    dest: "{{ ansible_env.HOME }}/.bash_aliases"
    block: |
      alias d="docker"
      alias docker-compose="docker compose"
      alias dc="docker compose"
      #complete -F _docker docker-compose dc
      #complete -F _docker docker d
    marker: '# {mark} ANSIBLE MANAGED BLOCK - usefull bash docker aliases'
    append_newline: true
    prepend_newline: true
    create: yes
